# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.book:
        class: App\Admin\BookAdmin
        arguments: [~, App\Entity\Book, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Livres }

    admin.translation:
        class: App\Admin\TranslationAdmin
        arguments: [~, App\Entity\Translation, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Traductions }

    admin.reading:
        class: App\Admin\ReadingAdmin
        arguments: [~, App\Entity\Reading, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Lectures }

    admin.genre:
        class: App\Admin\GenreAdmin
        arguments: [~, App\Entity\Genre, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Genres }

    admin.author:
        class: App\Admin\AuthorAdmin
        arguments: [~, App\Entity\Author, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Auteurices }

    admin.language:
        class: App\Admin\LanguageAdmin
        arguments: [~, App\Entity\Language, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Langues }

    admin.series:
        class: App\Admin\SeriesAdmin
        arguments: [~, App\Entity\Series, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: SÃ©ries }

    admin.country:
        class: App\Admin\CountryAdmin
        arguments: [~, App\Entity\Country, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Pays }